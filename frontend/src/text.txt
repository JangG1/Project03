korLastName
korFirstName
engLastName
engFirstName
birthday
gender
fromArea
toArea
seat
seatClass1
seatClass2
this.startYear
this.startMonth
this.startDay
this.startWeek
this.returnYear
this.returnMonth
this.returnDay
InfantCount
ChildCount
AdultCount
startTime1
arriveTime1                
startTime2
arriveTime2


 flight1: this.user.flight1,
                    flight2: this.user.flight2,
                    korLastName: this.user.korLastName,
                    korFirstName: this.user.korFirstName,
                    engLastName: this.engLastName,
                    engFirstName: this.engFirstName,
                    birthday: this.user.birthday,
                    gender: this.user.gender,
                    fromArea: this.user.fromArea,
                    toArea: this.user.toArea,
                    seat: this.user.seat,
                    seatClass1: this.user.seatClass1,
                    seatClass2: this.user.seatClass2,
                    startYear: this.user.startYear,
                    startMonth: this.user.startMonth,
                    startDay: this.user.startDay,
                    startWeek: this.user.startWeek,
                    returnYear: this.user.returnYear,
                    returnMonth: this.user.returnMonth,
                    returnDay: this.user.returnDay,
                    returnWeek: this.user.returnWeek,
                    InfantCount: this.user.InfantCount,
                    ChildCount: this.user.ChildCount,
                    AdultCount: this.user.AdultCount,
                    startTime1: this.user.startTime1,
                    arriveTime1: this.user.arriveTime1,
                    startTime2: this.user.startTime2,
                    arriveTime2: this.user.arriveTime2,
                    startPrice: this.user.startPrice,


console.log(this.$store.state.userInfo.email)
            console.log(this.user.korFirstName)
            console.log(this.user.korLastName)
            console.log(this.user.engFirstName)
            console.log(this.user.engLastName)
            console.log(this.user.gender)
            console.log(this.user.birthday)
            console.log(this.user.seat)
            console.log(this.user.seatClass1)
            console.log(this.user.seatClass2)
            console.log(this.user.way)
            console.log(this.user.flight1)
            console.log(this.user.flight2)
            console.log(this.user.fromArea)
            console.log(this.user.toArea)
            console.log(startDate)
            console.log(returnDate)
            console.log(this.user.InfantCount)
            console.log(this.user.ChildCount)
            console.log(this.user.AdultCount)
            console.log(this.user.startTime1)
            console.log(this.user.arriveTime1)
            console.log(this.user.startTime2)
            console.log(this.user.arriveTime2)


testSend() {
            const startDate = this.startYear + "-" + this. startMonth + "-" + this.startDay + '(' + this.startWeek + ')';
            const returnDate = this.returnYear + "-" + this. returnMonth + "-" + this.returnDay + '(' + this.returnWeek + ')';

            if(this.returnYear != " "){
                this.way = "왕복"
            }else{
                this.way = "편도";
            }

            axios.post("/res/resPost", {
                    email: this.$store.state.userInfo.email,
                    korFirstName: this.korFirstName,
                    korLastName: this.korLastName,
                    engFirstName: this.engFirstName,
                    engLastName: this.engLastName,
                    gender: this.gender,
                    birthday: this.birthday,
                    seat: this.seat,
                    seatClass1: this.seatClass1,
                    seatClass2: this.seatClass2,
                    way: this.way,
                    flight1: this.flight1,
                    flight2: this.flight2,
                    fromArea: this.fromArea,
                    toArea: this.toArea,
                    oneWayArea: " ",
                    startDate: startDate,
                    returnDate: returnDate,
                    adultCount: this.AdultCount,
                    childCount: this.ChildCount,
                    infantCount: this.InfantCount,
                    startTime1: this.startTime1,
                    arriveTime1: this.arriveTime1,
                    startTime2: this.startTime2,
                    arriveTime2: this.arriveTime2,
                })
                .then(res => {
                    console.log(res)
                    console.log("보내짐")
                })
                .catch(err => {
                    console.log(err)
                    console.log("안보내짐")
                })
        },